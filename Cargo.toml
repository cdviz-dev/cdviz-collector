[package]
name = "cdviz-collector"
description = "A service & cli to collect SDLC/CI/CD events and to dispatch as cdevents."
keywords = ["cd", "cdevents", "sdlc"]
categories = []
edition = "2021"
version = "0.2.2"
authors = ["David Bernard"]
license = "Apache-2.0"
homepage = "https://cdviz.dev"
repository = "https://github.com/cdviz-dev/cdviz-collector"
rust-version = "1.83.0"
publish = true

[dependencies]
async-trait = "0.1"
axum = { version = "0.7", optional = true }
axum-tracing-opentelemetry = { version = "0.24", optional = true }
bytes = { version = "1.8", optional = true }
cdevents-sdk = "0.1"
chrono = { version = "0.4", features = ["serde"] }
cid = "0.11"
clap = { version = "4", features = ["derive", "env"] }
clap-verbosity-flag = "3.0"
cliclack = { version = "0.3", optional = true }
cloudevents-sdk = { version = "0.7", features = ["http-binding"] }
console = { version = "0.15", optional = true }
csv = { version = "1", optional = true }
derive_more = { version = "1", features = ["display", "from", "error"] }
enum_dispatch = "0.3"
figment = { version = "0.10", features = ["toml", "env"] }
futures = "0.3"
globset = { version = "0.4", optional = true }
handlebars = { version = "6", optional = true }
handlebars_misc_helpers = { version = "0.17", optional = true, default-features = false, features = [
  "string",
  "json",
  "regex",
  "uuid",
] }
humantime-serde = "1.1"
init-tracing-opentelemetry = { version = "0.24", features = [
  "otlp",
  "tracing_subscriber_ext",
  "logfmt",
] }
multihash = "0.19"
opendal = { version = "0.50", default-features = false, features = [
  "services-fs",
  "services-s3",
], optional = true }
reqwest = { version = "0.12", default-features = false, optional = true }
reqwest-middleware = { version = "0.4", features = ["json"], optional = true }
reqwest-tracing = { version = "0.5", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = "3.11"
sha2 = "0.10"
similar = { version = "2.2", optional = true, features = ["unicode", "inline"] }
sqlx = { version = "0.8", features = [
  "postgres",
  "runtime-tokio",
  "tls-rustls",
  "macros",
  "time",
  "json",
], default-features = false, optional = true }
tokio = { version = "1", features = ["full"] }
tracing = "0.1"
tracing-opentelemetry-instrumentation-sdk = { version = "0.24" }
vrl = { version = "0.20", optional = true }

[dev-dependencies]
assert2 = "0.3"
# axum-test = "14"
cdevents-sdk = { version = "0.1", features = ["testkit"] }
figment = { version = "0.10", features = ["toml", "env", "test"] }
pretty_assertions = "1"
proptest = "1"
rstest = "0.23"
rustainers = "0.12"
tempfile = "3"
test-strategy = "0.4"
tracing-subscriber = "0.3"
uuid = "1.11"

[features]
## default is "full" feature set
default = [
  "sink_db",
  "sink_folder",
  "sink_http",
  "source_http",
  "source_opendal",
  "tool_transform",
]
#! ### Sinks
sink_db = ["dep:sqlx"]
sink_folder = ["dep:opendal"]
sink_http = [
  "dep:reqwest",
  "dep:reqwest-middleware",
  "dep:reqwest-tracing",
  # reqwest is also used as transitive dependencies
  "reqwest/charset",
  "reqwest/http2",
  "reqwest/json",
  "reqwest/rustls-tls",
]
#! ### Sources
source_http = ["dep:axum", "dep:axum-tracing-opentelemetry"]
source_opendal = [
  "dep:bytes",
  "dep:csv",
  "dep:globset",
  "dep:handlebars",
  "dep:handlebars_misc_helpers",
  "dep:opendal",
  "transformer_hbs",
  "transformer_vrl",
]

#! ### Transformers
transformer_hbs = ["dep:handlebars", "dep:handlebars_misc_helpers"]
transformer_vrl = ["dep:vrl"]

#! ### Tools
tool_ui = ["dep:cliclack", "dep:console", "dep:similar"]
tool_transform = [
  "source_opendal",
  "tool_ui",
  "transformer_hbs",
  "transformer_vrl",
]

[target.'cfg(all(target_env = "musl", target_pointer_width = "64"))'.dependencies.jemallocator]
version = "0.5"

[package.metadata.release]
pre-release-commit-message = "ðŸš€ (cargo-release) version {{version}}"
tag-prefix = ""
tag-name = "{{prefix}}{{version}}"
tag-message = "ðŸ”– {{version}}"

[package.metadata.cargo-machete]
ignored = [
  # "handlebars_misc_helpers",
  "humantime-serde",
] # auto-registered and used at runtime

[lints.rust]
unsafe_code = "forbid"
missing_docs = "allow" # not published as crate
deprecated = "warn"
warnings = "deny"

[lints.clippy]
perf = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
cargo = { level = "allow", priority = -1 }   # not published as crate
undocumented_unsafe_blocks = "deny"
dbg_macro = "warn"
decimal_literal_representation = "warn"
expect_used = "warn"
if_then_some_else_none = "warn"
indexing_slicing = "allow"
large_include_file = "warn"
min_ident_chars = "warn"
print_stderr = "warn"
print_stdout = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
unnecessary_safety_doc = "warn"
unwrap_used = "warn"
module_name_repetitions = "allow"

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

version: '3'

tasks:

  install:cargo-binstall:
    internal: true
    cmds:
      # cargo install --locked cargo-binstall
      - (cargo-binstall -V > /dev/null) || (curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash)

  install:*:
    internal: true
    vars:
      ARG: '{{index .MATCH 0}}'
    deps: [ install:cargo-binstall ]
    cmds:
      - (cargo binstall -y {{.ARG}} || cargo install --locked {{.ARG}})

  install:rustfmt:
    internal: true
    cmds:
      - rustup component add rustfmt

  install:clippy:
    internal: true
    cmds:
      - rustup component add clippy

  install:sqlx-cli:
    internal: true
    cmds:
      # use Rustls rather than OpenSSL (be sure to add the features for the databases you intend to use!)
      # no binstall available
      - cargo install sqlx-cli --no-default-features --features rustls,postgres --locked

  check:
    deps: [ install:cargo-hack ]
    cmd: cargo hack check --each-feature --no-dev-deps

  build:
    cmd: cargo build


  format:
    aliases: [fmt]
    desc: Format the code and sort dependencies
    deps: [ install:cargo-sort, install:rustfmt ]
    cmds:
      - cargo fmt
      - cargo sort --grouped

  deny:
    deps: [ install:cargo-deny ]
    cmds:
      - cargo deny check advisories
      - cargo deny check bans licenses sources

  lint:
    desc: Lint all the code (megalinter + lint_rust)
    deps: 
      - lint:rust
      # - lint:megalinter

  lint:rust:
    deps: [ install:cargo-sort, install:rustfmt, install:clippy ]
    cmds:
      - cargo fmt --all -- --check
      - cargo sort --grouped --check
      - cargo clippy --workspace --all-features --all-targets -- --deny warnings --allow deprecated --allow unknown-lints

  test:
    deps: [ install:cargo-nextest ]
    cmds:
      - cargo nextest run
      # - cargo test --doc
      # - cargo hack nextest --each-feature -- --test-threads=1


  # # release *arguments: install:cargo-release install:git-cliff
  # #   cargo release --workspace --execute {{ arguments }}
  # #   # git-cliff could not be used as `pre-release-hook` of cargo-release because it uses tag
  # #   git-cliff -o "CHANGELOG.md"
  # #   git add CHANGELOG.md && git commit -m "üìù update CHANGELOG" && git push

  db:prepare-offline:
    desc: update db definition to be able compile sqlx code
    deps: [ install:sqlx-cli ]
    vars:
      PG_OFFLINE_PWD: "mysecretpassword"
      PG_OFFLINE_USER: "me"
      PG_OFFLINE_URL: "postgres://{{.PG_OFFLINE_USER}}:{{.PG_OFFLINE_PWD}}@127.0.0.1:5432/{{.PG_OFFLINE_USER}}"
    cmds:
      - docker rm -f postgres || true
      - docker run --name postgres
        -e POSTGRES_PASSWORD={{.PG_OFFLINE_PWD}}
        -e POSTGRES_USER={{.PG_OFFLINE_USER}}
        -v {{.USER_WORKING_DIR}}/../cdviz-db/src:/docker-entrypoint-initdb.d
        -p 5432:5432 -d postgres:16
      - sleep 3
      - sqlx database create --database-url {{.PG_OFFLINE_URL}}
      - cargo sqlx prepare --workspace --database-url {{.PG_OFFLINE_URL}}
      - sqlx database drop -y --database-url {{.PG_OFFLINE_URL}}
      - docker rm -f postgres

  run:
    cmds:
      - cargo run -- -vv --config ./examples/assets/cdviz-collector.toml

  ci:
    desc: set of tasks run by CI
    cmds:
      - task: check
      - task: lint
      - task: test